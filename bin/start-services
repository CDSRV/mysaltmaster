#!/bin/bash -x

## starts salt master+minion services

## source the environment
ACTIVATE=${ACTIVATE:-$HOME/bin/activate-saltstack-env}
. $ACTIVATE

## dont proceed if services are running
check_processes () {
# ps -ef | grep salt | grep -v grep | grep -v $0 | grep -v $SALT_HOME
## use expanded scope to catch defunct python interpreters
pgrep -a salt-m
}
## TODO: multi-platform args to ps
check_processes && { : "OK : salt services are running"; exit 0; }

LOG_DIR=${LOG_DIR:-/var/log/salt}
[ -d $LOG_DIR ] || mkdir $LOG_DIR
ls -latr ${LOG_DIR}

DEBUG=${DEBUG:-debug}

## TODO : change to 'case' clause
start_desktop () {
TERM_TYPE=${TERM_TYPE:-xterm}
TERM_OPTS=${TERM_OPTS:-"-hold -e"}
: "... launching services in foreground windows"
$TERM_TYPE $TERM_OPTS salt-master -l $DEBUG &
$TERM_TYPE $TERM_OPTS salt-minion -l $DEBUG & 
}
[ -z $DISPLAY ] || start_desktop
 

: "...launching services in background - logging to $LOG_DIR"
[ -z $DISPLAY ] && salt-master -l $DEBUG &> $LOG_DIR/master &
[ -z $DISPLAY ] && salt-minion -l $DEBUG &> $LOG_DIR/minion &


STARTUP_WAIT=${STARTUP_WAIT:-10}
: "... waiting ${STARTUP_WAIT}s for services"
sleep $STARTUP_WAIT
check_processes || : "ERROR : ** no salt services running **"

## TODO : parameterize port number
## from halite.conf
WEB_UI=$(curl -s http://localhost:8080)

[ -n WEB_UI ] && : "OK : web interface is up at http://localhost:8080 - login as saltrunner"
[ -n WEB_UI ] || : "ERROR : web ui is not running"

KEY_WAIT=${KEY_WAIT:-15}
: "... waiting $KEY_WAIT sec to accept minion keys for localhost"
sleep $KEY_WAIT
salt-key -L ## list all
salt-key -A -y ## accept all pending
salt-key -L ## list all

: "... checking for running services"
pgrep -a salt
 
## don't exit >> 
##
## if running in container
#[ -f /.dockerenv ] && tail -f $LOG_DIR/*

## if called with '--tail' arg
[ "$1" = "--tail" ] && tail -f $LOG_DIR/*
## to allow running interactively in container
