#!/bin/bash -x

## starts salt master+minion services

## source the environment
ACTIVATE=${ACTIVATE:-$HOME/bin/activate-saltstack-env}
. $ACTIVATE

## dont proceed if services are running
check_processes () {
# ps -ef | grep salt | grep -v grep | grep -v $0 | grep -v $MYSALT
## use expanded scope to catch defunct python interpreters
pgrep -c salt-m
}
## TODO: multi-platform args to ps
check_processes && { echo "##> services are running"; exit 1; }

LOG_DIR=${LOG_DIR:-/var/log/salt}
echo "##> LOG_DIR=${LOG_DIR}"
[ -d $LOG_DIR ] || mkdir $LOG_DIR
ls -latr ${LOG_DIR}

DEBUG=${DEBUG:-debug}
echo "##> DEBUG=${DEBUG}"

## TODO : change to 'case' clause
start_desktop () {
TERM_TYPE=${TERM_TYPE:-xterm}
TERM_OPTS=${TERM_OPTS:-"-hold -e"}
echo "##> launching services in foreground windows"
$TERM_TYPE $TERM_OPTS salt-master -l $DEBUG &
$TERM_TYPE $TERM_OPTS salt-minion -l $DEBUG & 
}
[ -z $DISPLAY ] || start_desktop
 

echo "##> launching services in background - logging to $LOG_DIR"
[ -z $DISPLAY ] && salt-master -l $DEBUG &> $LOG_DIR/master &
[ -z $DISPLAY ] && salt-minion -l $DEBUG &> $LOG_DIR/minion &


STARTUP_WAIT=${STARTUP_WAIT:-10}
echo "##> waiting ${STARTUP_WAIT}s for services"
sleep $STARTUP_WAIT
check_processes || echo "##> ERROR : ** no salt services running **"

## TODO : parameterize port number
## from halite.conf
WEB_UI=$(curl -s http://localhost:8080) 

## TODO : this step fails under docker
[ -n WEB_UI ] && echo "##> OK : web interface is up at http://localhost:8080 - login as saltrunner"
[ -n WEB_UI ] || echo "##> ERROR : web ui is not running"

KEY_WAIT=${KEY_WAIT:-10}
echo "##> waiting $KEY_WAIT sec to accept minion keys for localhost:"
sleep $KEY_WAIT
salt-key -A --include-all -y ## accept all
salt-key -L	## list all


echo "##> services running :"
pgrep -a salt
